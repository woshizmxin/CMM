/*
    AST.hpp
    =======
        Struct AST implementation.
*/

#pragma once

#include <string>
#include <vector>
#include "AST.h"
#include "TokenType.hpp"
#include "Token.h"

namespace CMM
{

////////////////////////////////////////////////////////////////////////////////
// Using
////////////////////////////////////////////////////////////////////////////////

using std::string;
using std::vector;


////////////////////////////////////////////////////////////////////////////////
// Constructor
////////////////////////////////////////////////////////////////////////////////

AST::AST(TokenType tokenType, const string &tokenStr,
    const vector<AST *> &subList, int lineNo):
    __tokenType(tokenType),
    __tokenStr (tokenStr),
    __subList  (subList),
    __lineNo   (lineNo) {}


////////////////////////////////////////////////////////////////////////////////
// Constructor (With tokenPtr)
////////////////////////////////////////////////////////////////////////////////

AST::AST(const Token *tokenPtr):
    __tokenType(tokenPtr->tokenType()),
    __tokenStr (tokenPtr->tokenStr()),
    __lineNo   (tokenPtr->lineNo()) {}


////////////////////////////////////////////////////////////////////////////////
// Getter: __tokenType
////////////////////////////////////////////////////////////////////////////////

TokenType AST::tokenType() const
{
    return __tokenType;
}


////////////////////////////////////////////////////////////////////////////////
// Getter: __tokenStr
////////////////////////////////////////////////////////////////////////////////

string &AST::tokenStr()
{
    return __tokenStr;
}


const string &AST::tokenStr() const
{
    return __tokenStr;
}


////////////////////////////////////////////////////////////////////////////////
// Getter: __subList
////////////////////////////////////////////////////////////////////////////////

vector<AST *> &AST::subList()
{
    return __subList;
}


const vector<AST *> &AST::subList() const
{
    return __subList;
}


////////////////////////////////////////////////////////////////////////////////
// Getter: __lineNo
////////////////////////////////////////////////////////////////////////////////

int AST::lineNo() const
{
    return __lineNo;
}


////////////////////////////////////////////////////////////////////////////////
// Destructor
////////////////////////////////////////////////////////////////////////////////

AST::~AST()
{
    for (auto subPtr: __subList)
    {
        delete subPtr;
    }
}


}  // End namespace CMM
