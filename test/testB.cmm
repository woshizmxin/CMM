/*
    A program to perform selection sort on a 10
    element array.
*/

/*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Global Variable Define
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

int globalNumArray[10];


/*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Get Min Index
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

int getMinIdx(int numArray[], int beginIdx, int endIdx)
{
    int minIdx;
    int minNum;
    int nowIdx;

    minIdx = beginIdx;
    minNum = numArray[beginIdx];
    nowIdx = beginIdx + 1;

    while (nowIdx < endIdx)
    {
        if (numArray[nowIdx] < minNum)
        {
            minIdx = nowIdx;
            minNum = numArray[nowIdx];
        }

        nowIdx = nowIdx + 1;
    }

    return minIdx;
}


/*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Sort Num List
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

void sortNumList(int numArray[], int beginIdx, int endIdx)
{
    int nowIdx;
    int minIdx;
    int tmpNum;

    nowIdx = beginIdx;

    while (nowIdx < endIdx - 1)
    {
        minIdx = getMinIdx(numArray, nowIdx, endIdx);
        tmpNum = numArray[minIdx];
        numArray[minIdx] = numArray[nowIdx];
        numArray[nowIdx] = tmpNum;
        nowIdx = nowIdx + 1;
    }
}


/*//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Main Program Define
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/

int main()
{
    int idx;

    idx = 0;

    while (idx < 10)
    {
        globalNumArray[idx] = input();
        idx = idx + 1;
    }

    sortNumList(globalNumArray, 0, 10);

    idx = 0;

    while (idx < 10)
    {
        output(globalNumArray[idx]);
        idx = idx + 1;
    }
}
